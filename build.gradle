import org.apache.tools.ant.filters.ReplaceTokens

// Apply Gradle plugins
plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'checkstyle'

    id 'org.cadixdev.licenser' version '0.6.1'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

defaultTasks 'clean', 'updateLicenses', 'build', 'shadowJar'

// Project information
group = 'net.caseif.ttt'
version = '0.12.0-SNAPSHOT'

// Extended project information
ext.projectName = 'ttt'
ext.description = 'A Bukkit minigame based off the Garry\'s Mod gamemode Trouble In Terrorist Town.'
ext.inceptionYear = '2013'
ext.packaging = 'jar'
ext.versionSuffix = version.contains('SNAPSHOT') ? (
        (
                System.getenv('GIT_COMMIT') ? ('-git('
                        + System.getenv('GIT_BRANCH')
                        .substring(System.getenv('GIT_BRANCH').split('/')[0].length() + 1) + '-'
                        + System.getenv('GIT_COMMIT').substring(0, 7) + ')') : ''
        )
                + (System.getenv('BUILD_NUMBER') ? '-jnks' + System.getenv('BUILD_NUMBER') : '')
) : ''

sourceCompatibility = 1.7
targetCompatibility = 1.7

// Project repositories
repositories {
    mavenCentral()
    maven {
        name = 'spigot'
        url 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
    maven {
        name = 'caseif'
        url 'https://repo.caseif.net/'
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
}

ext {
    bukkit = 'org.bukkit:bukkit:1.14-pre5-SNAPSHOT'
    flint = 'net.caseif.flint:flint:1.3.1'
    rosetta = 'net.caseif.rosetta:rosetta:1.1.3'
    jtelemetry = 'net.caseif.jtelemetry:jtelemetry:1.1.0'
    updater = 'net.gravitydevelopment.updater:updater:2.4'
    bstats = 'org.bstats:bstats-bukkit:1.2'
    jnbt = 'org.jnbt:jnbt:1.1'

    junit_api = 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    junit_engine = 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

// Project dependencies
dependencies {
    implementation bukkit
    implementation flint
    implementation rosetta
    implementation crosstitles
    implementation jtelemetry
    implementation updater
    implementation bstats
    implementation jnbt

    testImplementation junit_api
    testRuntimeOnly junit_engine

    checkstyle 'org.spongepowered:checkstyle:6.1.1-sponge1'
}

// Read source files using UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += '-Xlint:all'
}

processResources {
    from 'LICENSE'
    filter {String line -> line.replace('SNAPSHOT', 'SNAPSHOT' + versionSuffix)}

    filter ReplaceTokens, tokens: [
            "name": project.name,
            "version": project.version
    ]
}

jar {
    classifier = 'base'
}

shadowJar {
    dependencies {
        include dependency(rosetta)
        include dependency(jtelemetry)
        include dependency(updater)
        include dependency(bstats)
        include dependency(jnbt)
    }
    classifier = ''

    relocate('net.caseif.rosetta', 'net.caseif.ttt.lib.net.caseif.rosetta')
    relocate('net.caseif.jtelemetry', 'net.caseif.ttt.lib.net.caseif.jtelemetry')
    relocate('net.gravitydevelopment.updater', 'net.caseif.ttt.lib.net.gravitydevelopment.updater')
    relocate('org.bstats', 'net.caseif.ttt.lib.org.bstats')
    relocate('org.jnbt', 'net.caseif.ttt.lib.org.jnbt')
}

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

artifacts {
    archives shadowJar
    archives sourceJar
}

// License header formatting
license {
    include '**/*.java'
    ignoreFailures false
}

// check code style
checkstyle {
    configProperties = [
            'name': project.name,
            'year': project.inceptionYear,
            'basedir': project.projectDir,
            'severity': 'warning'
    ]
    configFile = file('etc/checkstyle.xml')
}

tasks.withType(Checkstyle) {
    exclude '**/*.properties'
    exclude '**/*.yml'
}

wrapper {
    gradleVersion = '7.4'
}
